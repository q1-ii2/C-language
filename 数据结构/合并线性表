#define MAXSIZE 10
/***************************/
/*     程序名：task2_2.C   */
/*     程序功能：合并线性表*/
typedef int ElemType;
typedef struct {
	ElemType elem[MAXSIZE];
	int len;
}SqList;
//翻译 SqList为线性表，list为列表，elem为元素，locate为定位
//以下是函数声明
void CreatList(SqList* L, int n);
void PrintList(SqList* L);
ElemType GetElem(SqList* L, int i);
int Locate(SqList* L, ElemType x);
void UnionList(SqList* La, SqList* Lb);

//主函数
int main(void)
{
	int alen, blen;//定义长度
	SqList la, lb;
	printf("\n------CreatList A--------\n");
	printf("please input alen:"); scanf("%d", &alen);
	CreatList(&la, alen);
	PrintList(&la);
	printf("\n------CreatList B--------\n");
	printf("please input blen:"); scanf("%d", &blen);
	CreatList(&lb, blen);
	PrintList(&lb);
	UnionList(&la, &lb);
	printf("\n\n------After union--------\n");
	PrintList(&la);

	system("pause");
	return 0;
}
//创建长度为n的线性表L
void CreatList(SqList* L, int n)
{
	int k;
	printf("\nplease input element:");
	for (k = 1; k <= n; k++)scanf("%d", &L->elem[k]);
	L->len = n;
}

//输出线性表L
void PrintList(SqList* L)
{
	int k;
	printf("List have %d element:", L->len);
	for (k = 1; k <= L->len; k++)printf("%5d", L->elem[k]);
}

//得到线性表L中的第i个数据
ElemType GetElem(SqList* L, int i)
{
	return (L->elem[i]);
}

/*查找线性表L中是否存在元素x，如果存在，则返回所在位置，否则返回0*/
int Locate(SqList* L, ElemType x) {
	int i;
	for (i = 1; i <= L->len; i++)
	{
		if (L->elem[i] == x)return 1;
		else return 0;
	}
}
//在线性表L中第1个元素之前插入一个新元素x
int Insert_Sq(SqList* L, int i, ElemType x)
{
	int j;
	if (i<1 || i>L->len + 1)return 0;
	if (L->len == MAXSIZE - 1)return -1;
	for (j = L->len; j >= i; --j)L->elem[j + 1] = L->elem[j];
	L->elem[i] = x;
	++L->len;
	return 1;
}
//线性表Lb合并到线性表La的表尾
void UnionList(SqList* La, SqList* Lb) {
	int blen, i, k;
	ElemType x;
	blen = Lb->len;
	for (i = 1; i <= blen; i++) {
		x = GetElem(Lb, i);
		k = Locate(La, x);
		if (k == 0)Insert_Sq(La, La->len + 1, x);
	}
}