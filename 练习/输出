int main(void)
{
	int a[5] = { 1,2,3,4,5 };
	int* ptr = (int*)(&a + 1);
	printf("%d,%d", *(a + 1), *(ptr - 1));
	system("pause");
	return 0;
}
//输出结果为2,5
//(&a+1)中&a表示的是整个数组+1就是指向下一个数组

struct Test
{
	int Num;
	char* pcName;
	short sDate;
	char cha[2];
	short sBa[4];
}*p = (struct Test*)0x100000;
//假设p 的值为0x100000。如下表表达式的值分别为多少？
//已知,结构体Test类型的变量大小是20个字节
int main()
{
	printf("%p\n", p + 0x1);
	//结构体指针+1跳过一个结构体
	//0x100000+20-->0x100014
	printf("%p\n", (unsigned long)p + 0x1);
	//1,048,567+1-->1,048,,577
	//0x100001
	printf("%p\n", (unsigned int*)p + 0x1);
	//0x100000+4-->0x100004
	printf("%p\n", (unsigned short*)p + 0x1);
}
//输出结果为0x1000014 0x100001 0x100004